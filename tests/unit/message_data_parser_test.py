from web3 import Web3

from src.lib.message.message_data_parser import SubmitRetryableMessageDataParser


def test_does_parse_l1_to_l2_message():
    message_data_parser = SubmitRetryableMessageDataParser()
    retryable_data = "0x

    res = message_data_parser.parse(retryable_data)

    assert res["callValueRefundAddress"] == "0x7F869dC59A96e798e759030b3c39398ba584F087"
    assert (
        res["data"]
        == "0x
    )
    assert res["destAddress"] == "0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65"
    assert res["excessFeeRefundAddress"] == "0x7F869dC59A96e798e759030b3c39398ba584F087"
    assert res["gasLimit"] == Web3.to_int(hexstr="0x0210f1")
    assert res["l1Value"] == Web3.to_int(hexstr="0x30346f1c785e")
    assert res["l2CallValue"] == Web3.to_int(0)
    assert res["maxFeePerGas"] == Web3.to_int(hexstr="0x172c5865")
    assert res["maxSubmissionFee"] == Web3.to_int(hexstr="0x53280cf149")


def test_does_parse_eth_deposit_in_l1_to_l2_message():
    message_data_parser = SubmitRetryableMessageDataParser()
    retryable_data = "0x

    res = message_data_parser.parse(retryable_data)
    assert res["callValueRefundAddress"] == "0xf71946496600e1e1d47b8A77EB2f109Fd82dc86a"
    assert res["data"] == "0x"
    assert res["destAddress"] == "0xf71946496600e1e1d47b8A77EB2f109Fd82dc86a"
    assert res["excessFeeRefundAddress"] == "0xf71946496600e1e1d47b8A77EB2f109Fd82dc86a"
    assert res["gasLimit"] == Web3.to_int(0)

    assert res["l1Value"] == Web3.to_wei("30.01", "ether")
    assert res["l2CallValue"] == Web3.to_int(0)
    assert res["maxFeePerGas"] == Web3.to_int(0)
    assert res["maxSubmissionFee"] == Web3.to_int(hexstr="0x370e285a0c")
